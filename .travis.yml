dist: trusty
language: python
sudo: required


python:
  - 3.4


addons:
  firefox: "56.0"
  apt:
    packages:
      - mysql-server-5.6
      - mysql-client-core-5.6
      - mysql-client-5.6
      - libmysqlclient-dev
      - language-pack-fr
      - unzip
      - oracle-java8-set-default


git:
  depth: 1


matrix:
  fast_finish: true


env:
  global:
    - secure: "azmDZZQZzf88zpbkYpLpxI66vpEVyv+kniW0QdWAt4qlys8P5OcO3VJBR5YT85vlvnjN9b6raWQAL1ymee0WmVdTmzXed8XjZv7t9QXVw7pfezxMKlEftVp/4Cu4wtvbew0ViZXNWV2hNXHzEqlhgnoIOq94i0UzZ7grMrI0xm0="
  matrix:
    - ZDS_TEST_JOB="zds.tutorialv2"
    - ZDS_TEST_JOB="zds.member zds.utils zds.forum"
    - ZDS_TEST_JOB="front zds.mp zds.gallery zds.pages zds.featured zds.notification zds.searchv2"
    - ZDS_TEST_JOB="selenium"
    - ZDS_TEST_JOB="doc"

notifications:
  webhooks:
    urls:
      - "https://scalar.vector.im/api/neb/services/hooks/dHJhdmlzLWNpLyU0MHNhbmRob3NlJTNBc2FuZGhvc2UuZnIvJTIxd2dlbkt2dHpNY3NYREtiZEhZJTNBbWF0cml4Lm9yZw"
    on_success: change
    on_failure: always
    on_start: never


services:
  - memcached


cache:
  apt: true
  pip: true
  yarn: true
  directories:
    - $HOME/.cabal
    - $HOME/.fonts
    - $HOME/.pandoc
    - $HOME/.texlive
    - $HOME/bin
    - node_modules


before_install:
  - . ./scripts/ci_turbo.sh # This script exports environment variables, it must be sourced

  - travis_retry pip install -q coveralls

  - |
    # install elasticsearch
    if [[ "$ZDS_TEST_JOB" == *"zds.searchv2"* ]]; then
      # see https://docs.travis-ci.com/user/database-setup/#Installing-specific-versions-of-ElasticSearch
      curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.2.deb \
      && sudo dpkg -i --force-confnew elasticsearch-5.5.2.deb \
      && sudo service elasticsearch start
    fi

  - |
    # setup mysql
    if [[ "$ZDS_TEST_JOB" == *"zds."* ]] || [[ "$ZDS_TEST_JOB" == *"selenium"* ]]; then
      # MySQL config
      ./scripts/ci_mysql_setup.sh
    fi

install:
  - |
    # install webdriver for selenium.
    if [[ "$ZDS_TEST_JOB" == *"selenium"* ]]; then
      wget https://github.com/mozilla/geckodriver/releases/download/v0.19.0/geckodriver-v0.19.0-linux64.tar.gz \
      && mkdir geckodriver \
      && tar -xzf geckodriver-v0.19.0-linux64.tar.gz -C geckodriver \
      && export PATH=$PATH:$PWD/geckodriver \
      && export DISPLAY=:99.0 \
      && sh -e /etc/init.d/xvfb start \
      && sleep 3 # give xvfb some time to start
    fi

  - |
    # install frontend dependencies
    if [[ "$ZDS_TEST_JOB" == *"front"* ]] || [[ "$ZDS_TEST_JOB" == *"selenium"* ]]; then
      nvm install 8 \
      && nvm use 8 \
      && npm i -g yarn \
      && yarn --silent
    fi

  - |
    # install latex
    if [[ "$ZDS_TEST_JOB" == *"zds.tutorialv2"* ]]; then
      mkdir -p $HOME/bin \
      && ./scripts/install_texlive.sh \
      && ./scripts/install_resources.sh \
      && export PATH=$HOME/.texlive/bin/x86_64-linux:$PATH \
      && export PATH=$PATH:$HOME/bin
    fi

  - |
    # install backend dependencies
    if [[ "$ZDS_TEST_JOB" == *"zds."* ]] || [[ "$ZDS_TEST_JOB" == *"selenium"* ]] || [[ "$ZDS_TEST_JOB" == *"doc"* ]]; then
      pip install -q -r requirements-dev.txt -r requirements-prod.txt
    fi


script:
  - |
    # lint backend
    if [[ "$ZDS_TEST_JOB" == *"zds.gallery"* ]]; then
      ./scripts/no_import_zds_settings.sh \
      && flake8
    fi

  - |
    # test and build frontend
    if [[ "$ZDS_TEST_JOB" == *"front"* ]]; then
      yarn test \
      && yarn build # we need to upload the assets later
    fi

  - |
    # test backend
    if [[ "$ZDS_TEST_JOB" == *"zds."* ]]; then
      coverage run --source='.' manage.py \
        test \
        --keepdb \
        --settings zds.settings_test_travis \
        --exclude-tag=front \
        ${ZDS_TEST_JOB/front/}
    fi

  - |
    # selenium tests
    if [[ "$ZDS_TEST_JOB" == *"selenium"* ]]; then
      yarn build
      python manage.py \
        test \
        --keepdb \
        --settings zds.settings_test_travis \
        --tag=front
    fi

  - |
    # test and build frontend
    if [[ "$ZDS_TEST_JOB" == *"doc"* ]]; then
      make --directory doc html
    fi

after_success:
  - du -sh $HOME/.texlive 2>/dev/null | true

  - |
    # upload coverage
    if [[ "$ZDS_TEST_JOB" != "none" ]]; then
      coveralls
    fi

  - |
    # upload compiled assets
    COMMIT_MSG=`git rev-list --format=%B --max-count=1 $TRAVIS_COMMIT`
    if [[ "$ZDS_TEST_JOB" == *"front"* ]] && [[ "$TRAVIS_PULL_REQUEST" == false ]] && [[ ! -z "$TRAVIS_TAG" ]] && [[ ! "$TRAVIS_TAG" == *"-build" ]]
    then
      # Adding GitHub OAuth token to login
      echo -e "machine github.com login $BOT_LOGIN\n password $BOT_PASSWORD" > $HOME/.netrc
      git config --global url."https://".insteadOf git://
      git config --global user.name "Build bot"
      git config --global user.email "zestedesavoir@gmail.com"
      git config --global push.default simple

      # Run script
      ./scripts/push_front.sh $TRAVIS_TAG
    fi

  - |
    # upload built documentation to GitHub Pages
    if [[ "$ZDS_TEST_JOB" == *"doc"* ]] && [[ "$TRAVIS_BRANCH" == "dev" ]]; then
      # Adding GitHub OAuth token to login
      echo -e "machine github.com login $BOT_LOGIN\n password $BOT_PASSWORD" > $HOME/.netrc \
      && git config --global url."https://".insteadOf git:// \
      && git config --global user.name "Build bot" \
      && git config --global user.email "zestedesavoir@gmail.com" \
      && git config --global push.default simple \
      && ./scripts/push_doc.sh
    fi
