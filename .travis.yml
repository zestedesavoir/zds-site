git:
  depth: 1

language: python

python:
  - 2.7

env:
  global:
    - secure: "azmDZZQZzf88zpbkYpLpxI66vpEVyv+kniW0QdWAt4qlys8P5OcO3VJBR5YT85vlvnjN9b6raWQAL1ymee0WmVdTmzXed8XjZv7t9QXVw7pfezxMKlEftVp/4Cu4wtvbew0ViZXNWV2hNXHzEqlhgnoIOq94i0UzZ7grMrI0xm0="
  matrix:
    - TEST_APP="-e back_mysql -- zds.member zds.mp zds.utils zds.forum zds.gallery zds.pages zds.search zds.featured zds.notification"
    - TEST_APP="-e back_mysql -- zds.tutorialv2"
    - TEST_APP="-e front"

notifications:
  irc:
    channels:
      - irc.smoothirc.net#zds-dev
    skip_join: true

services:
 - mysql
 - memcached

sudo: false
cache:
  apt: true
  pip: true
  directories:
    - $HOME/.cabal
    - $HOME/.fonts
    - $HOME/.nvm
    - $HOME/.pandoc
    - $HOME/.texlive
    - $HOME/bin

addons:
  apt:
    packages:
      - libmysqlclient-dev
      - language-pack-fr
      - unzip

before_script:
  # configure mysql
  - mysql -e "SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES'" # Travis default
  # try to avoid mysql has gone away errors
  - mysql -e "SET GLOBAL wait_timeout = 36000;"
  - mysql -e "SET GLOBAL max_allowed_packet = 134209536;"
  # database services
  - mysql -e 'create database zds_test;'
  - mv zds/settings_test_travis.py zds/settings_prod.py

install:
  - mkdir -p $HOME/bin
  - ./scripts/install_texlive.sh
  - |
    # cache these no matter what
    if ls $HOME/.nvm/versions/node/v0.12* 1> /dev/null 2>&1; then
      echo "Using cached nvm"
    else
      touch $HOME/.cache_updated
      nvm install 0.12
    fi

    # only for front tests
    if [[ "$TEST_APP" == *"front"* ]]; then
      nvm use 0.12
      npm install -g npm
    fi
  - ./scripts/install_resources.sh
  - export PATH=$HOME/.texlive/bin/x86_64-linux:$PATH
  - export PATH=$PATH:$HOME/bin
  # Python dependencies
  - travis_retry pip install coveralls
  - travis_retry pip install tox==2.0.1

script:
  - tox $TEST_APP
  - |
    # avoid cache update & upload when we didn't explicitely change its content
    if [[ -f "$HOME/.cache_updated" ]]; then
      echo "Cache updated."
    else
      echo "Cache not updated."
      rm -rf $HOME/.cabal $HOME/.fonts $HOME/.nvm $HOME/.pandoc $HOME/.texlive $HOME/bin
    fi

after_success:
  - coveralls
  - |
    COMMIT_MSG=`git rev-list --format=%B --max-count=1 $TRAVIS_COMMIT`
    if [[ "$TEST_APP" == *"front"* ]] && [[ "$TRAVIS_PULL_REQUEST" == false ]] && [[ ! -z "$TRAVIS_TAG" ]] && [[ ! "$TRAVIS_TAG" == *"-build" ]]
    then
      # Adding GitHub OAuth token to login
      echo "machine github.com login $GITHUB_TOKEN password x-oauth-basic" > $HOME/.netrc
      git config --global url."https://".insteadOf git://
      git config --global user.name "Build bot"
      git config --global user.email "zestedesavoir@gmail.com"
      git config --global push.default simple

      # Run script
      ./scripts/push_front.sh $TRAVIS_TAG
    fi
