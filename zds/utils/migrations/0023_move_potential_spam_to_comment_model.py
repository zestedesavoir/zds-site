# Generated by Django 2.2.17 on 2021-01-15 23:45

from django.db import connection, migrations, models


def copy_potential_spam_to_comment(apps, schema_editor):
    """
    Forward migration: copies potential spam flags from the forum_post table
    to the utils_comment one.
    """
    Comment = apps.get_model("utils", "Comment")

    # We cannot use a model for that because the forum.Post Python field
    # no longer exist, so we read old data using pure SQL.
    with connection.cursor() as cursor:
        cursor.execute("SELECT comment_ptr_id FROM forum_post WHERE is_potential_spam_old_field = 1")
        updated_comments = []
        for row in cursor.fetchall():
            comment = Comment.objects.get(pk=row[0])
            comment.is_potential_spam = True
            updated_comments.append(comment)
        Comment.objects.bulk_update(updated_comments, ["is_potential_spam"])


def copy_potential_spam_to_forum_post(apps, schema_editor):
    """
    Backward migration: copies potential spam flags from the utils_comment table
    to the forum_post one.
    """
    Comment = apps.get_model("utils", "Comment")

    with connection.cursor() as cursor:
        for comment in Comment.objects.filter(is_potential_spam=True):
            cursor.execute(
                "UPDATE forum_post SET is_potential_spam_old_field = 1 WHERE comment_ptr_id = %s", [comment.pk]
            )


class Migration(migrations.Migration):
    dependencies = [
        ("utils", "0022_set_default_latest_by_for_alerts"),
        # We must first temporarily rename the old field to something else, because
        # without that the migration will not succeed due to conflicting field name
        # between the parent model (utils.Comment) and the child (forum.Post).
        ("forum", "0020_rename_post_is_potential_spam_to_temp_name_for_migration"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="comment",
            options={
                "permissions": [("change_comment_potential_spam", "Can change the potential spam status of a comment")],
                "verbose_name": "Commentaire",
                "verbose_name_plural": "Commentaires",
            },
        ),
        migrations.AddField(
            model_name="comment",
            name="is_potential_spam",
            field=models.BooleanField(default=False, verbose_name="Est potentiellement du spam"),
        ),
        migrations.RunPython(copy_potential_spam_to_comment, copy_potential_spam_to_forum_post),
    ]
